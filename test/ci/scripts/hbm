#!/usr/bin/env python3
import click
import harbomaster

@click.group()
@click.option('-a', '--api-token', default=None)
@click.option('-h', '--host', default=None)
@click.option('-b', '--build-target-phid')
@click.pass_context
def hbm(ctx, api_token, host, build_target_phid):
    ctx.obj['API_TOKEN'] = api_token
    ctx.obj['HOST'] = host
    ctx.obj['BUILD_TARGET_PHID'] = build_target_phid

@hbm.command()
@click.option('-f', '--filename')
@click.pass_context
def send_ctest_results(ctx, filename):
    _hbm = harbomaster.Harbormaster(ctx=ctx.obj)
    with harbomaster.CTestResults(filename) as tests:
        _hbm.send_unit_tests(tests)

@hbm.command()
@click.option('-k', '--key')
@click.option('-l', '--label')
@click.pass_context
def send_uri(ctx, key, label):
    _hbm = harbomaster.Harbormaster(ctx=ctx.obj)
    _hbm.send_uri(key, label)


@hbm.command()
@click.pass_context
def passed(ctx):
    _hbm = harbomaster.Harbormaster(ctx=ctx.obj)
    _hbm.passed()


@hbm.command()
@click.pass_context
def failed(ctx):
    _hbm = harbomaster.Harbormaster(ctx=ctx.obj)
    _hbm.failed()


if __name__ == '__main__':
    hbm(obj={})
